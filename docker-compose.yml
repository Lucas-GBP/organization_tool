services:
  database:
    image: "database:latest"
    env_file:
      - ".env"
    ports:
      - "${POSTGRES_PORT}:${PORT_DATABASE}"
    volumes:
      - "./database:/app"
      - "./database/app:${PGDATA}"
    networks:
      - default
    build: 
      context: "./database"
      dockerfile: "database.dockerfile"
      network: "host"
  backend:
    command: poetry run uvicorn --reload --host 0.0.0.0 --port ${PORT_BACKEND} --loop uvloop --log-level info backend.api:app
    image: "backend:latest"
    env_file:
      - ".env"
    ports:
      - "${PORT_BACKEND}:${PORT_BACKEND}"
    volumes:
      - "./backend:/app"
    networks:
      - default
    build:
      context: "./backend"
      dockerfile: "backend.dockerfile"
      network: "host"
  frontend:
    image: "frontend:latest"
    env_file:
      - ".env"
    ports:
      - "${PORT_FRONTEND}:${PORT_FRONTEND}"
    environment:
      - NODE_ENV=development 
      - WATCHPACK_POLLING=true
    command: npm run dev
    volumes:
      - "./frontend:/app"
    networks:
      - default
    build:
      context: "./frontend"
      dockerfile: "frontend.dockerfile"
      network: "host"
networks:
  default:
    driver: bridge